---
include:
  - remote: 'https://gitlab.com/op_so/projects/gitlab-ci-templates/-/raw/main/templates/lint.gitlab-ci.yml'
  - remote: 'https://gitlab.com/op_so/projects/gitlab-ci-templates/-/raw/main/templates/image-factory.gitlab-ci.yml'

variables:
  DOCKER_REGISTRY_IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHORT_SHA
  DOCKER_DOCKERHUB_IMAGE_REPOSITORY: index.docker.io/jfxs/alpine-squid
  DOCKER_DOCKERHUB_RM_URL: jfxs/alpine-squid
  DOCKER_QUAY_IMAGE_REPOSITORY: quay.io/ifxs/alpine-squid
  DOCKER_QUAY_RM_URL: quay.io/ifxs/alpine-squid
  DOCKER_SBOM_SUBSET: "^squid "
  IMAGE_ALPINE: alpine:latest
  IMAGE_TASK: jfxs/alpine-task
  LINT_DOCKER: "true"
  LINT_SHELL: "true"
  LINT_SHELL_FILE: "files/*.sh"
  LINT_VALE: "true"
  TASKFILE_VERSION: .Taskfile-version.yml

stages:
  - lint
  - build-image
  - test-image
  - trigger-publish-image
  - publish-image

docker:build:
  before_script:
    - if [ ! -f "$TASKFILE_VERSION" ]; then wget -q -O "$TASKFILE_VERSION" https://gitlab.com/op_so/task/task-templates/-/raw/main/Taskfile.d/version.yml; fi
    - DOCKER_BUILD_VERSION=$(task --taskfile "$TASKFILE_VERSION" get-docker-apk-version IMG="$IMAGE_ALPINE" APK="squid")

amd64:sanity-test:
  image: $IMAGE_TASK
  stage: test-image
  services:
    - name: $DOCKER_REGISTRY_IMAGE_TAG
      alias: proxy
  script:
    - task 00:30-sanity-test PROXY=http://proxy:3128

arm64:sanity-test:
  extends: amd64:sanity-test
  tags:
    - arm64

sanity-test:version:
  before_script:
    - if [ ! -f "$TASKFILE_VERSION" ]; then wget -q -O "$TASKFILE_VERSION" https://gitlab.com/op_so/task/task-templates/-/raw/main/Taskfile.d/version.yml; fi
    - squid_version=$(task --taskfile "$TASKFILE_VERSION" get-docker-cli-version IMG="$DOCKER_REGISTRY_IMAGE_TAG" CMD="squid --version")
    - DOCKER_VERSION_CLI=$(task --taskfile "$TASKFILE_VERSION" format-semver VERSION="$squid_version")
