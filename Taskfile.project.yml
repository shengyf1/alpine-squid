---
# https://taskfile.dev
#
# Taskfile.project.yml for your main project tasks. Must be commited.
# If you always want the last version of the task templates, add the following line in your .gitignore file
# /Taskfile.d/
#
version: '3'

vars:
  # TO MODIFY: Task templates to download separated by comma
  # Example: TASK_TEMPLATES: go,lint,yarn
  TASK_TEMPLATES: docker,git,lint,version
  # Proxy URL can be configure bellow or as an argument of 00-install-templates
  TASK_PROXY: ""
  DEFAULT_TAG: alpine-squid
  IMAGE_RF: jfxs/robot-framework:latest

tasks:

  00-get-list-templates:
    # Get the list of templates to download
    # Do not remove
    cmds:
      - echo "{{.TASK_TEMPLATES}}"
    silent: true

  10-build-local:
    desc: "[PROJECT] Build an image locally. Arguments: [TAG|T=image:tag] [VCS_REF|C=110f273aad1cc] [FILE|F=<Dockerfile_path>] (*)"
    summary: |
      [PROJECT] Build an image locally.
      Usage: task 00:10-build-local TAG|T=<image[:tag]> [VCS_REF|C=<commit_sha>] [FILE|F=<Dockerfile_path>]

      Arguments:
       TAG     | T  Tag of the image (optional)
       VCS_REF | C  Commit revision SHA hash (optional, by default NO_REF)
       FILE    | F  Dockerfile path (optional, by default Dockerfile)
    vars:
      TAG: '{{default .T .TAG}}'
      D_TAG: '{{default .DEFAULT_TAG .TAG}}'
      VCS_REF: '{{default .C .VCS_REF}}'
      D_VCS_REF: '{{default "NO_REF" .VCS_REF}}'
      FILE: '{{default .F .FILE}}'
      D_FILE: '{{default "Dockerfile" .FILE}}'
    cmds:
      - |
        version=$(task version:get-docker-apk-version IMG=alpine:latest APK="squid")
        echo "$version"
        task docker:build-local TAG="{{.D_TAG}}" VERSION="$version" VCS_REF="{{.D_VCS_REF}}" FILE="{{.D_FILE}}"
    silent: true

  30-sanity-test:
    desc: "[PROJECT] Sanity tests. Arguments: PROXY|P=http://proxy:3128 (*)"
    summary: |
      [PROJECT] Sanity tests.
      Usage: task 00:20-sanity-test PROXY|P=<proxy_url>

      Arguments:
       PROXY | P  Proxy host to test (required)
    vars:
      PROXY: '{{default .PX .PROXY}}'
      TARGET: https://www.google.com
    cmds:
      - |
        http_code=$(curl -x {{.PROXY}} -L -s -o /dev/null -w "%{http_code}" {{.TARGET}})
        if [ "${http_code}" != "200" ]; then
          printf "\033[0;31m[FAILED] Sanity test!\033[0m\n"
          exit 1
        else
          printf "\033[0;32m[OK]\033[0m Sanity test.\n"
        fi
    preconditions:
      - sh: test -n "{{.PROXY}}" || test -n "{{.PX}}"
        msg: "PROXY|PX argument is required"
    silent: true

  40-pre-commit:
    desc: "[PROJECT] Pre-commit checks."
    cmds:
      - date > {{.FILE_TASK_START}}
      - defer: rm -f {{.FILE_TASK_START}}
      - task lint:all MEX='"#styles" "#.Taskfile.d"'
      - task lint:docker
      - task lint:shell FILES=files/*.sh
      - echo "" && echo "Checks Start $(cat {{.FILE_TASK_START}}) - End $(date)"
    silent: true
